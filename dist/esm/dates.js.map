{"version":3,"file":"dates.js","sourceRoot":"","sources":["../../src/dates.ts"],"names":[],"mappings":"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","sourcesContent":["export function getExpirationString(\n  expiration: number,\n  UTCSecondsNow: number,\n  config?: {\n    delimiter?: \" \" | \":\";\n    capitalizeSuffix: boolean;\n    showZeros?: boolean;\n    includes?: {\n      suffix: string;\n      durationSeconds: number;\n      mod: number;\n    }[];\n  }\n) {\n  const ranges = config?.includes ?? [\n    {\n      suffix: \"d\",\n      durationSeconds: 60 * 60 * 24,\n    },\n    {\n      suffix: \"h\",\n      durationSeconds: 60 * 60,\n      mod: 24,\n    },\n    {\n      suffix: \"m\",\n      durationSeconds: 60,\n      mod: 60,\n    },\n    {\n      suffix: \"s\",\n      durationSeconds: 1,\n      mod: 60,\n    },\n  ];\n  const secondsRemaining = expiration - UTCSecondsNow;\n  const floorOrCeil = (n: number) =>\n    n < 0 ? 0 : expiration - UTCSecondsNow > 0 ? Math.floor(n) : Math.ceil(n);\n\n  const numString = (n: number, suffix: string): string => {\n    return floorOrCeil(n) || config?.showZeros\n      ? `${floorOrCeil(n)}${suffix}`\n      : \"\";\n  };\n\n  return ranges\n    .map(({ durationSeconds, mod, suffix }) =>\n      numString(\n        mod\n          ? (secondsRemaining / durationSeconds) % mod\n          : secondsRemaining / durationSeconds,\n        config?.capitalizeSuffix ? suffix.toUpperCase() : suffix\n      )\n    )\n    .join(config?.delimiter ?? \" \");\n}\n\nexport function shortDateString(utc_seconds: number) {\n  return `${new Date(utc_seconds * 1000).toLocaleDateString([], {\n    month: \"2-digit\",\n    day: \"2-digit\",\n    year: \"2-digit\",\n  })} ${new Date(utc_seconds * 1000).toLocaleTimeString([], {\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n  })}`;\n}\n\nexport function longDateString(utcSeconds: number) {\n  return new Date(utcSeconds * 1000).toLocaleTimeString([\"en-US\"], {\n    year: \"2-digit\",\n    month: \"2-digit\",\n    day: \"2-digit\",\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n    timeZoneName: \"short\",\n  });\n}\n\nexport function secondstoDuration(durationSeconds: number) {\n  const years = Math.floor(durationSeconds / 31449600);\n  const months = Math.floor((durationSeconds % 31449600) / 2419200);\n  const weeks = Math.floor((durationSeconds % 2419200) / 604800);\n  const days = Math.floor((durationSeconds % 604800) / 86400);\n  const hours = Math.floor((durationSeconds % 86400) / 3600);\n  const minutes = Math.floor((durationSeconds % 3600) / 60);\n  const seconds = durationSeconds % 60;\n  let duration = \"\";\n  const optionalVals = [`${years}Y`, `${months}M`, `${weeks}w`, `${days}d`];\n  const vals = [`${hours}h`, `${minutes}m`, `${seconds}s`];\n  for (const val of optionalVals) {\n    if (parseInt(val.substring(0, val.length - 1)) > 0) {\n      duration += val + \" \";\n    }\n  }\n  for (const val of vals) {\n    duration += val + \" \";\n  }\n  return duration;\n}\n\nexport const secondsToString = (\n  requiredSeconds: number | undefined | null,\n  showSeconds = true\n) => {\n  if (!requiredSeconds || requiredSeconds <= 0) return \"0\";\n  const weeks = Math.floor(requiredSeconds / 60 / 60 / 24 / 7);\n  const days = Math.floor((requiredSeconds / 60 / 60 / 24) % 7);\n  const hours = Math.floor((requiredSeconds / 60 / 60) % 24);\n  const minutes = Math.floor((requiredSeconds / 60) % 60);\n  const seconds = Math.round(requiredSeconds % 60);\n\n  return `${weeks ? `${weeks}w ` : \"\"} ${days ? `${days}d ` : \"\"}${\n    !weeks && hours ? `${hours}h ` : \"\"\n  }${!weeks && minutes ? `${minutes}m ` : \"\"}${\n    seconds && showSeconds ? `${seconds}s` : \"\"\n  }`;\n};\n"]}