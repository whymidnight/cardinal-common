{"version":3,"file":"publicKeys.js","sourceRoot":"","sources":["../../src/publicKeys.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAE5C,OAAO,EAAE,WAAW,EAAE,MAAM,SAAS,CAAC;AAEtC,MAAM,UAAU,WAAW,CACzB,MAA6C,EAC7C,UAAU,GAAG,CAAC,EACd,QAAQ,GAAG,UAAU;IAErB,IAAI,CAAC,MAAM;QAAE,OAAO,EAAE,CAAC;IACvB,OAAO,GAAG,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,QAAQ,GAAG,SAAS,CAAC,CAAC,EAAE,UAAU,CAAC,KAAK,MAAM,aAAN,MAAM,uBAAN,MAAM,CAC5D,QAAQ,GACT,SAAS,CAAC,CAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,QAAQ,GAAG,MAAM,IAAG,QAAQ,CAAC,EAAE,CAAC;AACvD,CAAC;AAED,MAAM,UAAU,SAAS,CACvB,MAAoC,EACpC,OAAe;IAEf,IAAI,CAAC,MAAM;QAAE,OAAO,6BAA6B,CAAC;IAClD,OAAO,uCAAuC,MAAM,CAAC,QAAQ,EAAE,YAC7D,OAAO,KAAK,QAAQ,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAC7C,EAAE,CAAC;AACL,CAAC;AAED,MAAM,CAAC,MAAM,YAAY,GAAG,CAC1B,eAAqD,EACnC,EAAE;IACpB,IAAI,CAAC,eAAe;QAAE,OAAO,IAAI,CAAC;IAClC,IAAI;QACF,OAAO,IAAI,SAAS,CAAC,eAAe,CAAC,CAAC;KACvC;IAAC,OAAO,CAAC,EAAE;QACV,OAAO,IAAI,CAAC;KACb;AACH,CAAC,CAAC;AAEF,MAAM,UAAU,cAAc,CAAC,IAAY,EAAE,OAAe;IAC1D,OAAO,WAAW,CAAC,kCAAkC,IAAI,EAAE,EAAE,OAAO,CAAC,CAAC;AACxE,CAAC","sourcesContent":["import { PublicKey } from \"@solana/web3.js\";\n\nimport { withCluster } from \"./utils\";\n\nexport function shortPubKey(\n  pubkey: PublicKey | string | null | undefined,\n  startChars = 4,\n  endChars = startChars\n) {\n  if (!pubkey) return \"\";\n  return `${pubkey?.toString().substring(0, startChars)}..${pubkey\n    ?.toString()\n    .substring(pubkey?.toString().length - endChars)}`;\n}\n\nexport function pubKeyUrl(\n  pubkey: PublicKey | null | undefined,\n  cluster: string\n) {\n  if (!pubkey) return \"https://explorer.solana.com\";\n  return `https://explorer.solana.com/address/${pubkey.toString()}/metadata${\n    cluster === \"devnet\" ? \"?cluster=devnet\" : \"\"\n  }`;\n}\n\nexport const tryPublicKey = (\n  publicKeyString: string | string[] | undefined | null\n): PublicKey | null => {\n  if (!publicKeyString) return null;\n  try {\n    return new PublicKey(publicKeyString);\n  } catch (e) {\n    return null;\n  }\n};\n\nexport function transactionUrl(txid: string, cluster: string) {\n  return withCluster(`https://explorer.solana.com/tx/${txid}`, cluster);\n}\n"]}